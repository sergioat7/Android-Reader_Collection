name: Deploy to Alpha

on:
  push:
    branches:
      - release/*

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Grant execution permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run detekt validation
        run: ./gradlew detekt

      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
          fileName: ${{ secrets.KEYSTORE_PATH }}
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Assemble release bundle
        run: ./gradlew bundleRelease
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}

      - name: Create service_account.json
        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

      - name: Deploy to Alpha
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: aragones.sergio.readercollection
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          releaseName: ${GITHUB_REF##*/}
          whatsNewDirectory: whatsnew/

      - name: Merge to master
        run: |
          version_name=${GITHUB_REF##*/}
          git checkout master
          git fetch origin master
          git merge -m "Merge branch 'release/$version_name'" release/$version_name
          git push origin master

      - name: Tag release
        run: |
          git checkout master
          version_name=${GITHUB_REF##*/}
          echo "Tagging release with tag $version_name"
          git tag $version_name release/$version_name
          git push origin --tags

      - name: Merge to develop
        run: |
          version_name=${GITHUB_REF##*/}
          git checkout develop
          git fetch origin develop
          git merge -m "Merge branch 'master' into develop" master
          git push origin develop
